// Naomi Montserrat Barrera Bautista
// ISSC 411             Matrícula: 77746
// Materia: PPOSX       Profesor: Felipe Palafox
// EXAMEN Opcion 2 - Gestor de Inventario

#import <Foundation/Foundation.h>

// ================================================= Producto.h =================================================
// Definición de la interfaz de la clase Producto
@interface Producto : NSObject {
    NSString *_nombre;              // Variable de instancia para el nombre del producto
    NSInteger _cantidad;            // Variable de instancia para la cantidad del producto
    double _precio;                 // Variable de instancia para el precio del producto
}

@property (nonatomic, strong) NSString *nombre;     // Propiedad para acceder al nombre del producto
@property (nonatomic) NSInteger cantidad;           // Propiedad para acceder a la cantidad del producto
@property (nonatomic) double precio;                // Propiedad para acceder al precio del producto

// Método de inicialización
- (id)initWithProducto:(NSString *)nombreProducto cantidad:(NSInteger)cantidadProducto precio:(double)precioProducto;

@end

// ================================================= Producto.m =================================================
// Implementación de la clase Producto
@implementation Producto

// Síntesis de las propiedades para enlazarlas con las variables de instancia
@synthesize nombre = _nombre;
@synthesize cantidad = _cantidad;
@synthesize precio = _precio;

// Implementación del método de inicialización
- (id)initWithProducto:(NSString *)nombreProducto cantidad:(NSInteger)cantidadProducto precio:(double)precioProducto {
    self = [super init];                    // Llamada al inicializador de la superclase
    if (self) {                             // Verificación de la inicialización
        _nombre = nombreProducto;           // Asignación del nombre
        _cantidad = cantidadProducto;       // Asignación de la cantidad
        _precio = precioProducto;           // Asignación del precio
    }
    return self;                            // Retorno de la instancia inicializada
}

@end

// ================================================= Inventario.h =================================================
// Definición de la interfaz de la clase Inventario
@interface Inventario : NSObject {
    NSMutableArray<Producto *> *_productos;        // Variable de instancia para la lista de productos
}

@property (nonatomic, strong) NSMutableArray<Producto *> *productos;   // Propiedad para acceder a la lista de productos

// Método para agregar productos
- (void)agregarProducto:(Producto *)productoAgregado;

// Método para eliminar productos
- (void)eliminarProducto:(NSString *)productoEliminado;

// Método para listar productos
- (void)listarProductos;

// Método para calcular el valor total del inventario
- (double)calcularInventario;

@end

// ================================================= Inventario.m =================================================
// Implementación de la clase Inventario
@implementation Inventario

// Síntesis de la propiedad para enlazarla con la variable de instancia
@synthesize productos = _productos;

// Implementación del método de inicialización
- (instancetype)init {
    self = [super init];                            // Llamada al inicializador de la superclase
    if (self) {                                     // Verificación de la inicialización
        _productos = [NSMutableArray array];        // Inicialización de la lista de productos
    }
    return self;                                    // Retorno de la instancia inicializada
}

// Implementación del método para agregar un producto
- (void)agregarProducto:(Producto *)productoAgregado {
    [self.productos addObject:productoAgregado];   // Agregar el producto a la lista
}

// Implementación del método para eliminar un producto
- (void)eliminarProducto:(NSString *)productoEliminado {
    Producto *productoAEliminar = nil;                                  // Variable para almacenar el producto a eliminar
    for (Producto *eliminado in self.productos) {                       // Iteración sobre la lista de productos
        if ([eliminado.nombre isEqualToString:productoEliminado]) {     // Verificación del nombre del producto
            productoAEliminar = eliminado;                              // Almacenar el producto encontrado
            break;                                                      // Salir del bucle
        }
    }
    if (productoAEliminar) {                                // Verificación si se encontró el producto
        [self.productos removeObject:productoAEliminar];    // Eliminar el producto de la lista
    }
}

// Implementación del método para listar todos los productos
- (void)listarProductos {
    for (Producto *buscado in self.productos) {                 // Iteración sobre la lista de productos
        NSLog(@"Nombre: %@, Cantidad: %ld, Precio: %.2f",       // Imprimir detalles de cada producto
              buscado.nombre, (long)buscado.cantidad, buscado.precio);
    }
}

// Implementación del método para calcular el valor total del inventario
- (double)calcularInventario {
    double suma = 0;                                                 // Variable para almacenar la suma total de los precios
    for (Producto *total in self.productos) {                       // Iteración sobre los productos
        suma += total.cantidad * total.precio;                      // Suma de cada precio total por producto
    }
    return suma;                                                    // Cálculo y retorno de la suma total
}

@end

// ================================================= Main =================================================
// Función principal
int main(int argc, const char * argv[]) {
    @autoreleasepool {   // Bloque autoreleasepool para gestión de memoria
        // Creación de instancias de Producto
        Producto *pro1 = [[Producto alloc] initWithProducto:@"Computadoras" cantidad:5 precio:12500];
        Producto *pro2 = [[Producto alloc] initWithProducto:@"Celulares" cantidad:3 precio:5000];
        Producto *pro3 = [[Producto alloc] initWithProducto:@"Tablets" cantidad:4 precio:8000];
        Producto *pro4 = [[Producto alloc] initWithProducto:@"Fundas" cantidad:14 precio:100];

        // Creación de una instancia de Inventario de Productos
        Inventario *inventario = [[Inventario alloc] init];
        
        // Agregar Productos
        [inventario agregarProducto:pro1];  // Agregar producto pro1
        [inventario agregarProducto:pro2];  // Agregar producto pro2
        [inventario agregarProducto:pro3];  // Agregar producto pro3
        [inventario agregarProducto:pro4];  // Agregar producto pro4
        
        // Listar Productos 
        NSLog(@"================= Listado de Productos =================");     // Imprimir mensaje
        [inventario listarProductos];                                           // Listar todos los Productos
        NSLog(@"--------------------------------------------------");           // Imprimir mensaje
        NSLog(@"Total Inventario: $ %.2f", [inventario calcularInventario]);    // Imprimir total inventario
        NSLog(@"\n");                                                           // Salto de línea
        
        // Eliminar producto
        NSLog(@"Eliminando producto 'Computadoras'.");      // Imprimir mensaje
        [inventario eliminarProducto:@"Computadoras"];      // Eliminar producto con nombre "Computadoras"
        NSLog(@"\n");                                       // Salto de línea
        
        // Listar Productos después de eliminar
        NSLog(@"Listado de productos después de la eliminación:");               // Imprimir mensaje
        NSLog(@"================= Listado de Productos =================");     // Imprimir mensaje
        [inventario listarProductos];                                           // Listar todos los Productos
        NSLog(@"--------------------------------------------------");           // Imprimir mensaje
        NSLog(@"Total Inventario: $ %.2f", [inventario calcularInventario]);    // Imprimir total inventario
        NSLog(@"\n"); 
    }
    return 0;  // Retorno de la función principal
}
